name: Publish to Zenodo - Create New Version

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install requests

      # 1. Zip the .code folder into code.zip
      - name: Create ZIP of code folder
        run: zip -r code.zip code/
        
      # 2. Fetch the latest concept and deposition
      - name: Get latest concept and deposition details
        id: get_concept_deposition
        run: |
          echo "Fetching depositions from Zenodo sandbox..."
          response=$(curl -s -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" "https://sandbox.zenodo.org/api/deposit/depositions")
          echo "Response: $response"

          # Extract the most recent deposition ID and concept ID
          CONCEPT_ID=$(echo "$response" | jq '.[0].conceptrecid' | tr -d '"')
          DEPOSITION_ID=$(echo "$response" | jq '.[0].id' | tr -d '"')

          echo "Found Concept ID: $CONCEPT_ID"
          echo "Found Deposition ID: $DEPOSITION_ID"

          echo "CONCEPT_ID=$CONCEPT_ID" >> $GITHUB_ENV
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      # 3. Create new version under the same concept
      - name: Create new version under deposition ID
        id: create_new_version
        run: |
          echo "Creating new version under deposition ID: $DEPOSITION_ID"
          response=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/newversion" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          echo "New version response: $response"

          NEW_DEPOSITION_ID=$(echo "$response" | jq '.id' | tr -d '"')
          echo "New Deposition ID: $NEW_DEPOSITION_ID"
          echo "NEW_DEPOSITION_ID=$NEW_DEPOSITION_ID" >> $GITHUB_ENV

      # 4. Upload the new code.zip to the new deposition
      - name: Upload updated code.zip to new version
        run: |
          echo "Uploading updated code.zip to new version..."
          upload_response=$(curl -s -w "%{http_code}" -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/files" \
            -F "file=@code.zip" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          # Check if the upload was successful
          echo "Upload response code: $upload_response"
          if [[ "$upload_response" -ne 200 ]]; then
            echo "Error: Upload failed with response code $upload_response"
            exit 1
          fi

      # # 5. Publish the new version
      # - name: Publish the new version
      #   run: |
      #     echo "Publishing the new version..."
      #     publish_response=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/actions/publish" \
      #       -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
      #     echo "Publish response: $publish_response"
