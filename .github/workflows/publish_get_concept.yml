name: Publish to Zenodo - New Version via Concept

on:
  workflow_dispatch:

jobs:
  publish-new-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create ZIP of code folder
        run: zip -r code.zip code/

      - name: Get latest published deposition info
        id: get_latest
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          echo "Fetching depositions from Zenodo sandbox..."
          RESPONSE=$(curl -s -G "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          LATEST=$(echo "$RESPONSE" | jq -r '[.[] | select(.submitted == true)] | sort_by(.created) | last')

          if [ -z "$LATEST" ] || [ "$LATEST" == "null" ]; then
            echo "Error: No published depositions found."
            exit 1
          fi

          CONCEPT_ID=$(echo "$LATEST" | jq -r '.conceptrecid')
          DEPOSITION_ID=$(echo "$LATEST" | jq -r '.id')
          echo "Found Concept ID: $CONCEPT_ID"
          echo "Found Old Deposition ID: $DEPOSITION_ID"
          echo "CONCEPT_ID=$CONCEPT_ID" >> $GITHUB_ENV
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      - name: Create new version under concept
        id: new_version
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          echo "Creating new version under deposition ID: $DEPOSITION_ID"
          RESPONSE=$(curl -s -X POST \
            "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/newversion" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          echo "New version response: $RESPONSE"

          NEW_DRAFT_URL=$(echo "$RESPONSE" | jq -r '.links.latest_draft')
          if [ -z "$NEW_DRAFT_URL" ] || [ "$NEW_DRAFT_URL" == "null" ]; then
            echo "Error: Could not get latest draft URL for new deposition."
            exit 1
          fi

          echo "New deposition draft URL: $NEW_DRAFT_URL"

          NEW_DEPOSITION=$(curl -s -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" "$NEW_DRAFT_URL")
          NEW_DEPOSITION_ID=$(echo "$NEW_DEPOSITION" | jq -r '.id')

          echo "New Deposition ID: $NEW_DEPOSITION_ID"
          echo "NEW_DEPOSITION_ID=$NEW_DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload new code.zip
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/files" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -F "file=@code.zip;filename=code.zip"

      - name: Update metadata from .zenodo.json
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ ! -f .zenodo.json ]; then
            echo "Error: .zenodo.json not found!"
            exit 1
          fi
          curl -s -X PUT "https://sandbox.zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -d @.zenodo.json

      - name: Publish new version
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/actions/publish" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN"